const crypto = @import("crypto");

pub fn main() !void {
    // G1 point addition input format: 128 bytes (two 64-byte points)
    const input = [_]u8{
        // First point (G1 generator in compressed form, then zeros for padding)
        0x97, 0xf1, 0xd3, 0xa7, 0x31, 0x97, 0xd7, 0xb7,
        0xb5, 0xa3, 0x1e, 0xf5, 0x9e, 0x59, 0x39, 0x21,
        0x6d, 0x1b, 0x51, 0xa7, 0x01, 0xe4, 0x42, 0xda,
        0x05, 0xe9, 0x1e, 0x84, 0xd7, 0xb3, 0x0a, 0x8e,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        // Second point (same as first for benchmarking)
        0x97, 0xf1, 0xd3, 0xa7, 0x31, 0x97, 0xd7, 0xb7,
        0xb5, 0xa3, 0x1e, 0xf5, 0x9e, 0x59, 0x39, 0x21,
        0x6d, 0x1b, 0x51, 0xa7, 0x01, 0xe4, 0x42, 0xda,
        0x05, 0xe9, 0x1e, 0x84, 0xd7, 0xb3, 0x0a, 0x8e,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    };

    var output: [64]u8 = undefined;
    try crypto.Crypto.bls12_381.g1_add(&input, &output);
    _ = &output;
}
