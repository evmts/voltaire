name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        optimize: [Debug, ReleaseSmall, ReleaseSafe, ReleaseFast]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Zig 0.15.1
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.15.1
      - name: Build
        run: zig build -Doptimize=${{ matrix.optimize }}
      - name: Debug - List target directory (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          echo "=== Listing target directory structure ==="
          find target -name "*.a" -o -name "*.lib" | head -20 || true
          echo "=== Listing target/release ==="
          ls -la target/release/ || echo "target/release/ does not exist"
          echo "=== Listing target subdirectories ==="
          ls -la target/ || true
      - name: Test
        run: zig build test -Doptimize=${{ matrix.optimize }}

  examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Zig 0.15.1
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.15.1
      - name: Build keccak256 example
        run: zig build example-keccak256
      - name: Build ABI example
        run: zig build example-abi
      - name: Build secp256k1 example
        run: zig build example-secp256k1
      - name: Build address example
        run: zig build example-address
      - name: Build hex example
        run: zig build example-hex
      - name: Build RLP example
        run: zig build example-rlp
      - name: Build EIP-712 example
        run: zig build example-eip712
      - name: Build transaction example
        run: zig build example-transaction
      - name: Build C API example
        run: zig build example-c

  wasm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Zig 0.15.1
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.15.1
      - name: Build for WASM
        run: zig build -Dtarget=wasm32-wasi -Doptimize=ReleaseSmall

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Zig 0.15.1
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.15.1
      - name: Check formatting
        run: zig fmt --check .
